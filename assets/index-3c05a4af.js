import"./index-aa8104e2.js";import{d as p}from"./browser-f8dbb0d6.js";import{f as u,j as w,i as b,e as I}from"./CollectionSynchronizer-d734ae39.js";import{N as k}from"./NetworkAdapter-b7a01c72.js";import"./_commonjsHelpers-de833af9.js";var n=null;typeof WebSocket<"u"?n=WebSocket:typeof MozWebSocket<"u"?n=MozWebSocket:typeof global<"u"?n=global.WebSocket||global.MozWebSocket:typeof window<"u"?n=window.WebSocket||window.MozWebSocket:typeof self<"u"&&(n=self.WebSocket||self.MozWebSocket);const h=n,d="1",c=p("WebsocketClient");class y extends k{socket}class L extends y{timerId;#e=!1;url;constructor(e){super(),this.url=e}connect(e){this.timerId||(this.timerId=setInterval(()=>this.connect(e),5e3)),this.peerId=e,this.socket=new h(this.url),this.socket.binaryType="arraybuffer",this.socket.addEventListener("open",()=>{c(`@ ${this.url}: open`),clearInterval(this.timerId),this.timerId=void 0,this.join()}),this.socket.addEventListener("close",()=>{c(`${this.url}: close`),this.timerId||this.connect(e)}),this.socket.addEventListener("message",t=>this.receiveMessage(t.data)),setTimeout(()=>{this.#e||(this.#e=!0,this.emit("ready",{network:this}))},1e3),this.join()}join(){if(!this.socket)throw new Error("WTF, get a socket");this.socket.readyState===h.OPEN?this.send(f(this.peerId)):this.socket.addEventListener("open",()=>{if(!this.socket)throw new Error("WTF, get a socket");this.send(f(this.peerId))},{once:!0})}disconnect(){if(!this.socket)throw new Error("WTF, get a socket");this.send({type:"leave",senderId:this.peerId})}send(e){if("data"in e&&e.data.byteLength===0)throw new Error("tried to send a zero-length message");if(!this.peerId)throw new Error("Why don't we have a PeerID?");if(!this.socket||this.socket.readyState!==h.OPEN)throw new Error("Websocket Socket not ready!");const t=u(e),s=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength);this.socket?.send(s)}announceConnection(e){if(!this.peerId)throw new Error("we should have a peer ID by now");this.#e||(this.#e=!0,this.emit("ready",{network:this})),this.emit("peer-candidate",{peerId:e})}receiveMessage(e){const t=w(new Uint8Array(e)),{type:s,senderId:r}=t;if(!this.socket)throw new Error("Missing socket at receiveMessage");if(e.byteLength===0)throw new Error("received a zero-length message");switch(s){case"peer":c(`peer: ${r}`),this.announceConnection(r);break;case"error":c(`error: ${t.message}`);break;default:if(!b(t))throw new Error("Invalid message received");this.emit("message",t)}}}function f(i){return{type:"join",senderId:i,supportedProtocolVersions:[d]}}const l=p("WebsocketServer"),{encode:g,decode:m}=I;class j extends k{server;sockets={};constructor(e){super(),this.server=e}connect(e){this.peerId=e,this.server.on("connection",t=>{t.on("close",()=>{for(const[s,r]of Object.entries(this.sockets))t===r&&(this.emit("peer-disconnected",{peerId:s}),delete this.sockets[s])}),t.on("message",s=>this.receiveMessage(s,t)),this.emit("ready",{network:this})})}disconnect(){}send(e){if("data"in e&&e.data.byteLength===0)throw new Error("tried to send a zero-length message");if(!this.peerId)throw new Error("No peerId set for the websocket server network adapter.");if(this.sockets[e.targetId]===void 0){l(`Tried to send message to disconnected peer: ${e.targetId}`);return}const s=g(e),r=s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength);this.sockets[e.targetId]?.send(r)}receiveMessage(e,t){const s=m(e),{type:r,senderId:o}=s,a=this.peerId;if(!a)throw new Error("Missing my peer ID.");switch(l(`[${o}->${a}${"documentId"in s?"@"+s.documentId:""}] ${r} | ${e.byteLength} bytes`),r){case"join":this.emit("peer-candidate",{peerId:o}),this.sockets[o]=t,v(s.supportedProtocolVersions)===null?(this.send({type:"error",senderId:this.peerId,message:"unsupported protocol version",targetId:o}),this.sockets[o].close(),delete this.sockets[o]):this.send({type:"peer",senderId:this.peerId,selectedProtocolVersion:d,targetId:o});break;case"leave":break;default:this.emit("message",s);break}}}function v(i){return i===void 0||i.includes(d)?d:null}export{L as BrowserWebSocketClientAdapter,j as NodeWSServerAdapter};
