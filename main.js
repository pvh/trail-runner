import{C as w,F as y,I as v,T as S,U as C,a as O,c as P,b as k,d as M,e as R,f as E,g as A,h as L,i as _,j as I,k as b,l as j,m as U,n as B,o as N,p as T,q as W,r as $,s as D,t as J,u as x,v as q,w as z,x as F,y as K,z as H,A as Q,B as V,D as G,E as X,G as Y,H as Z,J as ee,K as te,L as oe,M as se,N as re,O as ne,P as ae,Q as ie,R as ce,S as m,V as le,W as de,X as ue,Y as ge,Z as pe,_ as me,$ as fe}from"./index.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const s of e.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function a(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(t){if(t.ep)return;t.ep=!0;const e=a(t);fetch(t.href,e)}})();const he="modulepreload",we=function(r,o){return new URL(r,o).href},p={},ye=function(o,a,i){if(!a||a.length===0)return o();const t=document.getElementsByTagName("link");return Promise.all(a.map(e=>{if(e=we(e,i),e in p)return;p[e]=!0;const s=e.endsWith(".css"),h=s?'[rel="stylesheet"]':"";if(!!i)for(let c=t.length-1;c>=0;c--){const l=t[c];if(l.href===e&&(!s||l.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${h}`))return;const n=document.createElement("link");if(n.rel=s?"stylesheet":he,s||(n.as="script",n.crossOrigin=""),n.href=e,document.head.appendChild(n),s)return new Promise((c,l)=>{n.addEventListener("load",c),n.addEventListener("error",()=>l(new Error(`Unable to preload CSS for ${e}`)))})})).then(()=>o()).catch(e=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=e,window.dispatchEvent(s),!s.defaultPrevented)throw e})},ve=Object.freeze(Object.defineProperty({__proto__:null,Counter:w,Float64:y,Int:v,Text:S,Uint:C,applyChanges:O,change:P,changeAt:k,clone:M,decodeChange:R,decodeSyncMessage:E,decodeSyncState:A,deleteAt:L,diff:_,dump:I,emptyChange:b,encodeChange:j,encodeSyncMessage:U,encodeSyncState:B,equals:N,free:T,from:W,generateSyncMessage:$,getActorId:D,getAllChanges:J,getBackend:x,getChanges:q,getConflicts:z,getHeads:F,getHistory:K,getLastLocalChange:H,getMissingDeps:Q,getObjectId:V,init:G,initSyncState:X,insertAt:Y,isAutomerge:Z,load:ee,loadIncremental:te,merge:oe,next:se,receiveSyncMessage:re,save:ne,saveIncremental:ae,saveSince:ie,toJS:ce,use:m,uuid:le,view:de},Symbol.toStringTag,{value:"Module"})),Se="automerge:3eN8pFkgzEePzQVKjQCA9t6jyX67";async function Ce(){const r=await navigator.serviceWorker.register("service-worker.js",{type:"module"});console.log("ServiceWorker registration successful with scope:",r.scope)}async function Oe(){return await ue,m(fe),new ge({storage:new pe,network:[],peerId:"frontend-"+Math.round(Math.random()*1e4),sharePolicy:async o=>o.includes("service-worker")})}function f(r){if(!navigator.serviceWorker.controller)throw new Error("No service worker is controlling this tab right now.");const o=new MessageChannel;r.networkSubsystem.addNetworkAdapter(new me(o.port1)),navigator.serviceWorker.controller.postMessage({type:"INIT_PORT"},[o.port2])}await Ce();const g=await Oe();f(g);navigator.serviceWorker.oncontrollerchange=function(){console.log("Controller changed!"),f(g)};window.repo=g;window.Automerge=window.automerge=ve;window.process={env:{DEBUG_COLORS:"false"},browser:!0,versions:{},stderr:{},cwd:()=>"."};const u=new URLSearchParams(window.location.search).get("app")||Se;console.log(`Booting from module at: ${u}`);console.log("Applying import map...");window.esmsInitOptions={shimMode:!0,mapOverrides:!0};await ye(()=>import("./es-module-shims.js").then(r=>r.e),["./es-module-shims.js","./index.js"],import.meta.url);const Pe=`./automerge-repo/${u}/importMap`,ke=await fetch(Pe),Me=await ke.json();importShim.addImportMap(Me);console.log("Importing...");const Re=`./automerge-repo/${u}/package.json`,Ee=await fetch(Re),Ae=await Ee.json(),Le=`./automerge-repo/${u}/fileContents/${Ae.module}`,_e=new URL(Le,window.location).toString(),d=await importShim(_e);console.log("Module imported:",d);d.mount||console.error("Root module doesn't export a mount function",d);const Ie=new URLSearchParams(window.location.search),be=Object.fromEntries(Ie.entries());d.mount(document.getElementById("root"),be);
